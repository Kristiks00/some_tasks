/*
 Язык L1 = { a^n b^m c^m d^n | m, n > 0 }. Для данного целого числа k (0 < k < 1000) напечатайте все строки длины k, принадлежащие данному языку, в лексикографическом порядке. Запоминать строки в памяти не допускается. Использование вспомогательных переменных не допускается. Каждую строку выводите на отдельной строке текста.

Решение реализуйте с помощью рекурсивного спуска, добавляя вместо проверки входной строки генерацию выходной строки. В начале решения напишите грамматику для данного языка, допускающую рекурсивный спуск.

Вы можете использовать одну переменную для чтения входного параметра. Рекурсивные функции могут принимать не более двух целых параметров: входной параметр и дополнительный параметр генерации. 

S -> aAd
A -> aAd | B
B -> bBc | bc
*/
#include <iostream>

void B(unsigned k)
{
    std::cout.put('b');
    if (k != 1) {
        B(k - 1);
    }
    std::cout.put('c');
}

void A(unsigned k, unsigned n)
{
    if (!n) {
        B(k);
        return;
    }
    std::cout.put('a');
    A(k, n - 1);
    std::cout.put('d');
}

int main(void)
{
    unsigned k;
    std::cin >> k;
    if (k & 1) {
        return 0;
    }
    k >>= 1;
    for (unsigned n = k - 1; n > 0; --n) {
        std::cout.put('a');
        A(k - n, n - 1);
        std::cout.put('d');
        std::cout.put('\n');
    }
    return 0;
}
